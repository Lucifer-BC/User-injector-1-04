<#
.SYNOPSIS
    Injecte des utilisateurs dans Active Directory √† partir d‚Äôun fichier CSV.
.PARAMETER CsvPath
    Le chemin vers le fichier CSV.
.PARAMETER TargetOU
    L‚Äôunit√© d‚Äôorganisation cible o√π cr√©er les comptes.
.PARAMETER DryRun
    Si activ√©, affiche les actions sans cr√©er les comptes.
#>

param(
    [string]$CsvPath = "",
    [string]$TargetOU = "",
    [switch]$DryRun
)

Import-Module ActiveDirectory

if (-not (Test-Path $CsvPath)) {
    Write-Host "‚ùå Fichier CSV introuvable : $CsvPath" -ForegroundColor Red
    exit 1
}

$users = Import-Csv $CsvPath

foreach ($user in $users) {
    $firstName = $user.first_name
    $lastName  = $user.last_name
    $password  = $user.mdp
    $username  = ($firstName.Substring(0,1) + $lastName).ToLower()

    $dn = "CN=$username,$TargetOU"

    if ($DryRun) {
        Write-Host "üîé DRY RUN : Cr√©er $username dans $TargetOU"
        continue
    }

    if (Get-ADUser -Filter "SamAccountName -eq '$username'" -ErrorAction SilentlyContinue) {
        Write-Host "‚ö†Ô∏è Utilisateur $username existe d√©j√†" -ForegroundColor Yellow
        continue
    }

    New-ADUser `
        -Name "$firstName $lastName" `
        -GivenName $firstName `
        -Surname $lastName `
        -SamAccountName $username `
        -UserPrincipalName "$username@loutrel.eu" `
        -AccountPassword (ConvertTo-SecureString $password -AsPlainText -Force) `
        -Enabled $true `
        -Path $TargetOU `
        -ChangePasswordAtLogon $false `
        -PasswordNeverExpires $true

    Write-Host "‚úÖ Utilisateur $username cr√©√© avec succ√®s dans $TargetOU"
}
